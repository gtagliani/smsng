package com.samseng.vehicles.model;
// Generated 23/01/2018 19:32:51 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name = "Company", schema = "dbo", catalog = "smsngvcls")

public class Company extends LogicDelete implements java.io.Serializable {

	private Integer id;
	
	@JsonManagedReference
	private CompanyType companyType;
	
	@NotEmpty(message="{company.name.error}")
	private String name;
	
	@NotEmpty(message="{company.taxNumberId.error}")
	private String taxesNumberId;
	
	@NotEmpty(message="{company.address.error}")
	private String address;
	
	@Pattern(regexp="(^$|[0-9].*)",message="{company.telephone1.error}")
	private String telephone1;
	
	@Email(message="{company.email.error}")
	@NotEmpty(message="{company.email.empty.error}")
	private String email;
	private short deleted;
	private Set<Vehicle> vehicles = new HashSet<Vehicle>(0);
	
	@JsonBackReference
	private Set<Driver> drivers = new HashSet<Driver>(0);

	public Company() {
	}

	public Company(CompanyType companyType, short deleted) {
		this.companyType = companyType;
		this.deleted = deleted;
	}

	public Company(CompanyType companyType, String name, String taxesNumberId, String address, String telephone1,
			String email, short deleted, Set<Vehicle> vehicles, Set<Driver> drivers) {
		this.companyType = companyType;
		this.name = name;
		this.taxesNumberId = taxesNumberId;
		this.address = address;
		this.telephone1 = telephone1;
		this.email = email;
		this.deleted = deleted;
		this.vehicles = vehicles;
		this.drivers = drivers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CompaniesTypeId", nullable = false)
	public CompanyType getCompanyType() {
		return this.companyType;
	}

	public void setCompanyType(CompanyType companyType) {
		this.companyType = companyType;
	}

	@Column(name = "name",nullable=false,unique=true, length = 100)
	@NotBlank(message = "{companyType.description.blank}")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "taxesNumberID")
	public String getTaxesNumberId() {
		return this.taxesNumberId;
	}

	public void setTaxesNumberId(String taxesNumberId) {
		this.taxesNumberId = taxesNumberId;
	}

	@Column(name = "address", length = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "telephone1")
	public String getTelephone1() {
		return this.telephone1;
	}

	public void setTelephone1(String telephone1) {
		this.telephone1 = telephone1;
	}

	@Column(name = "email")
	public String getemail() {
		return this.email;
	}

	public void setEmail(String eMail) {
		this.email = eMail;
	}

	@Column(name = "deleted", nullable = false)
	public short getDeleted() {
		return this.deleted;
	}

	public void setDeleted(short deleted) {
		this.deleted = deleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company")
	public Set<Vehicle> getVehicles() {
		return this.vehicles;
	}

	public void setVehicles(Set<Vehicle> vehicles) {
		this.vehicles = vehicles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company")
	public Set<Driver> getDrivers() {
		return this.drivers;
	}

	public void setDrivers(Set<Driver> drivers) {
		this.drivers = drivers;
	}

}
