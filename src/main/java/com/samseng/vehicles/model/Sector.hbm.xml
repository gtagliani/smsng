<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Generated 23/01/2018 19:32:52 by Hibernate Tools 5.2.3.Final --><!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="true" default-access="property" default-cascade="none" default-lazy="true">
    <class catalog="smsngvcls" dynamic-insert="false" dynamic-update="false" mutable="true" name="com.samseng.vehicles.model.Sector" optimistic-lock="version" polymorphism="implicit" schema="dbo" select-before-update="false" table="Sector">
        <id name="id" type="java.lang.Integer">
            <column name="id"/>
            <generator class="identity"/>
        </id>
        <property generated="never" lazy="false" name="description" optimistic-lock="true" type="string" unique="false">
            <column length="200" name="description" not-null="true"/>
        </property>
        <property generated="never" lazy="false" name="deleted" optimistic-lock="true" type="short" unique="false">
            <column name="deleted" not-null="true"/>
        </property>
        <set embed-xml="true" fetch="select" inverse="true" lazy="true" mutable="true" name="vehicleRegistereds" optimistic-lock="true" sort="unsorted" table="VehicleRegistered">
            <key on-delete="noaction">
                <column name="SectorId" not-null="true"/>
            </key>
            <one-to-many class="com.samseng.vehicles.model.VehicleRegistered" embed-xml="true" not-found="exception"/>
        </set>
        <set embed-xml="true" fetch="select" inverse="false" lazy="true" mutable="true" name="userses" optimistic-lock="true" sort="unsorted" table="Approver">
            <key on-delete="noaction">
                <column name="SectorId" not-null="true"/>
            </key>
            <many-to-many embed-xml="true" entity-name="com.samseng.vehicles.model.Users" not-found="exception" unique="false">
                <column length="50" name="UsersUsername" not-null="true"/>
            </many-to-many>
        </set>
    </class>
</hibernate-mapping>
