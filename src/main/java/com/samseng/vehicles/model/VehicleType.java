package com.samseng.vehicles.model;
// Generated 23/01/2018 19:32:51 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * VehicleType generated by hbm2java
 */
@Entity
@Table(name = "VehicleType", schema = "dbo", catalog = "smsngvcls")
public class VehicleType extends LogicDelete  implements java.io.Serializable {

	private Integer id;
	private Briefing briefing;
	private String description;
	private Short hasTrailer = 0;
	private short deleted = 0;
	private Set<Vehicle> vehicles = new HashSet<Vehicle>(0);

	public VehicleType() {
	}

	public VehicleType(Briefing briefing, String description, Short hasTrailer, Short deleted) {
		this.briefing = briefing;
		this.description = description;
		this.hasTrailer = hasTrailer;
		this.deleted = deleted;
	}

	public VehicleType(Briefing briefing, String description, Short hasTrailer, Short deleted, Set<Vehicle> vehicles) {
		this.briefing = briefing;
		this.description = description;
		this.hasTrailer = hasTrailer;
		this.deleted = deleted;
		this.vehicles = vehicles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BriefingId", nullable = false)
	public Briefing getBriefing() {
		return this.briefing;
	}

	public void setBriefing(Briefing briefing) {
		this.briefing = briefing;
	}

	@Column(name = "description", nullable = false, length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "hasTrailer", nullable = false)
	public Short getHasTrailer() {
		return this.hasTrailer;
	}

	public void setHasTrailer(Short hasTrailer) {
		if (hasTrailer == null) hasTrailer = 0;
		this.hasTrailer = hasTrailer;
	}

	@Column(name = "deleted", nullable = false)
	public short getDeleted() {
		return this.deleted;
	}

	public void setDeleted(short deleted) {
		this.deleted = deleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vehicleType")
	public Set<Vehicle> getVehicles() {
		return this.vehicles;
	}

	public void setVehicles(Set<Vehicle> vehicles) {
		this.vehicles = vehicles;
	}

}
