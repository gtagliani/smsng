package com.samseng.vehicles.model;
// Generated 23/01/2018 19:32:51 by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Vehicle generated by hbm2java
 */
@Entity
@Table(name = "Vehicle", schema = "dbo", catalog = "smsngvcls")
public class Vehicle extends LogicDelete implements java.io.Serializable {

	private Integer id;
	
	@JsonManagedReference
	private Company company;
	
	@JsonManagedReference
	private VehicleType vehicleType;
	
	private String vehicleId;
	private String trailerId;
	private Short needAutorization = 1;
	private Short permissionDenegated = 0;
	@JsonBackReference
	private Set<VehicleRegistered> vehicleRegistereds = new HashSet<VehicleRegistered>(0);
	private Short deleted=0;

	public Vehicle() {
	}

	public Vehicle(Integer id, Company company, VehicleType vehicleType, String vehicleId, Short permissionDenegated, Short deleted) {
		this.id = id;
		this.company = company;
		this.vehicleType = vehicleType;
		this.vehicleId = vehicleId;
		this.permissionDenegated = permissionDenegated == null? (short)0: (short)1;
		this.deleted = deleted;
	}

	public Vehicle(Integer id, Company company, VehicleType vehicleType, String vehicleId, String trailerId,
			Short needAutorization, Short permissionDenegated, Set<VehicleRegistered> vehicleRegistereds, Short deleted) {
		this.id = id;
		this.company = company;
		this.vehicleType = vehicleType;
		this.vehicleId = vehicleId;
		this.trailerId = trailerId;
		this.needAutorization = needAutorization== null? (short)0: (short)1;
		this.permissionDenegated = permissionDenegated == null? (short)0: (short)1;
		this.vehicleRegistereds = vehicleRegistereds;
		this.deleted = deleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CompanyId", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VehicleTypeId", nullable = false)
	public VehicleType getVehicleType() {
		return this.vehicleType;
	}

	public void setVehicleType(VehicleType vehicleType) {
		this.vehicleType = vehicleType;
	}

	@Column(name = "vehicleId", nullable = false, length = 15)
	public String getVehicleId() {
		return this.vehicleId;
	}

	public void setVehicleId(String vehicleId) {
		this.vehicleId = vehicleId;
	}

	@Column(name = "trailerId", length = 15)
	public String getTrailerId() {
		return this.trailerId;
	}

	public void setTrailerId(String trailerId) {
		this.trailerId = trailerId;
	}

	@Column(name = "needAutorization")
	public Short getNeedAutorization() {
		return this.needAutorization;
	}

	public void setNeedAutorization(Short needAutorization) {
		if (needAutorization == null) needAutorization = 0;
		this.needAutorization = needAutorization;
	}

	@Column(name = "permissionDenegated", nullable = false)
	public short getPermissionDenegated() {
		return this.permissionDenegated;
	}

	public void setPermissionDenegated(Short permissionDenegated) {
		if (permissionDenegated == null) permissionDenegated = 0;
		this.permissionDenegated = permissionDenegated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vehicle")
	public Set<VehicleRegistered> getVehicleRegistereds() {
		return this.vehicleRegistereds;
	}

	public void setVehicleRegistereds(Set<VehicleRegistered> vehicleRegistereds) {
		this.vehicleRegistereds = vehicleRegistereds;
	}

	@Override
	public short getDeleted() {
		return deleted;
	}

	@Override
	public void setDeleted(short deleted) {
		// TODO Auto-generated method stub
		this.deleted = deleted;
	}
	
	

}
